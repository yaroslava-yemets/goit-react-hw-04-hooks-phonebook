{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","label","htmlFor","input","type","id","pattern","title","required","onChange","button","Component","Filter","inputId","labeltId","ContactList","contacts","onDeleteContact","list","map","item","onClick","App","filter","changeFilter","addContact","foundNames","contact","toLocaleLowerCase","lowerName","includes","alert","deleteContact","contactId","prevState","getVisibleContacts","lowerCasedFilter","JSON","parse","localStorage","getItem","setItem","stringify","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20e38e42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","import { Component } from 'react';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    nameInputId = shortid.generate();\n    numberInputId = shortid.generate();\n\n    handleChange = (evt) => {\n        const { name, value } = evt.currentTarget;\n\n        this.setState({\n         [name]: value,\n        });\n    };\n\n    handleSubmit = (evt) => {\n        evt.preventDefault();\n        this.props.onSubmit(this.state);\n        this.reset();\n    };\n\n    reset = () => {\n        this.setState({\n            name: '',\n            number: '',\n        });\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} className={s.form}>\n                <label className={s.label} htmlFor={this.nameInputId}>Name</label>\n                <input\n                    className={s.input}\n                    value={this.state.name}\n                    type=\"text\"\n                    name=\"name\"\n                    id={this.nameInputId}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    onChange={this.handleChange}\n                />\n\n                <label className={s.label} htmlFor={this.numberInputId}>Number</label>\n                <input\n                    className={s.input} \n                    value={this.state.number}\n                    type=\"tel\"\n                    name=\"number\"\n                    id={this.numberInputId}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    onChange={this.handleChange}\n                />\n                \n                <button\n                className={s.button}\n                    type=\"submit\"\n                >\n                    Add contact\n                </button>\n            </form>\n        );\n    };\n};\n\nexport default ContactForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport s from './Filter.module.css';\n\nconst Filter = ({value, onChange}) => {\n    const inputId = shortid.generate();\n    const labeltId = shortid.generate();\n    return (\n    <>\n        <div className={s.form}>\n            <label htmlFor={labeltId} className={s.label}> Find contacts by name</label>\n            <input className={s.input} id={inputId} type=\"text\" value={value} onChange={onChange}/>\n        </div>\n    </>\n    )\n}    \n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n};\n\nexport default Filter;","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({contacts, onDeleteContact}) => (\n    <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n            <li key={id} className={s.item}>\n                <span>{name}:</span>\n                <span>{number}</span>\n                <button type=\"button\" onClick={() => onDeleteContact(id)}>Delete</button>\n            </li>\n        ))}\n    </ul>\n);\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;","import React, {Component} from 'react';\nimport shortid from 'shortid';\nimport './App.css';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n  static propTypes = {};\n\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n\n    if(contacts) {\n      this.setState({ contacts });\n    }\n  };\n\n  componentDidUpdate(prevState) {\n    if(this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeFilter = (evt) => {\n    this.setState({filter: evt.currentTarget.value});\n  };\n\n  addContact = ({ name, number }) => {\n    const foundNames = this.state.contacts.map(contact => contact.name.toLocaleLowerCase());\n    const lowerName = name.toLocaleLowerCase();\n    if(foundNames.includes(lowerName)){\n     return alert(`${name} is already in contacts`);\n    }\n      const contact = {\n        id: shortid.generate(),\n        name,\n        number,\n      };\n  \n      this.setState(({contacts})=> ({\n        contacts: [contact, ...contacts],\n      }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n    }));\n  };\n\n  getVisibleContacts = () => {\n    const {filter, contacts} = this.state;\n    const lowerCasedFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact => contact.name.toLocaleLowerCase().includes(lowerCasedFilter))\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1 className=\"text\">Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2 className=\"text\">Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact} />\n      </div>\n    )}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__2qyBI\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};"],"sourceRoot":""}